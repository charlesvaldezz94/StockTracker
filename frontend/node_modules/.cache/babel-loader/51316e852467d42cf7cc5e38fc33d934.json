{"ast":null,"code":"var _jsxFileName = \"/Users/charlesvaldez/SoftwareDevelopment/StockTracker/frontend/src/components/FindStock.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FindStock = _ref => {\n  _s();\n  let {\n    apiKey\n  } = _ref;\n  const [symbol, setSymbol] = useState(\"\");\n  const [stocks, setStocks] = useState([]);\n  const [rateLimitExceeded, setRateLimitExceeded] = useState(false);\n  const addStock = async () => {\n    try {\n      const response = await axios.get(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${symbol}&apikey=${apiKey}`);\n\n      // Check for rate limit message\n      if (response.data.Information && response.data.Information.includes(\"Thank you for using Alpha Vantage! Our standard API rate limit is 25 requests per day.\")) {\n        setRateLimitExceeded(true);\n        return;\n      }\n      if (!response.data[\"Global Quote\"] || !response.data[\"Global Quote\"][\"05. price\"]) {\n        alert(\"Invalid stock symbol. Please try again.\");\n      } else {\n        const newStock = {\n          symbol: symbol.toUpperCase(),\n          price: response.data[\"Global Quote\"][\"05. price\"]\n        };\n        setStocks([...stocks, newStock]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching stock data:\", error);\n      alert(\"Error fetching stock data. Please try again.\");\n    }\n\n    // Clear the input field\n    setSymbol(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"findStockContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"findStockInput\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"symbol\",\n          children: \"Stock Symbol:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"symbol\",\n          value: symbol,\n          onChange: e => setSymbol(e.target.value),\n          placeholder: \"Enter stock symbol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addStock,\n          children: \"Add Stock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"findStocksList\",\n      children: rateLimitExceeded ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Maximum API calls for the day reached. Please try again tomorrow.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: stocks.map((stock, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stocksCard\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stockCardTitle\",\n            children: [\" \", stock.symbol, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stockCardPrice\",\n            children: [\" \", stock.price, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stockCardRising\",\n            children: [\" \", stock.symbol, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(FindStock, \"6qrNZafsUSzs53FxSx0GFt2lbgc=\");\n_c = FindStock;\nexport default FindStock;\nvar _c;\n$RefreshReg$(_c, \"FindStock\");","map":{"version":3,"names":["React","useState","axios","FindStock","apiKey","symbol","setSymbol","stocks","setStocks","rateLimitExceeded","setRateLimitExceeded","addStock","response","get","data","Information","includes","alert","newStock","toUpperCase","price","error","console","e","target","value","map","stock","index"],"sources":["/Users/charlesvaldez/SoftwareDevelopment/StockTracker/frontend/src/components/FindStock.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst FindStock = ({ apiKey }) => {\n  const [symbol, setSymbol] = useState(\"\");\n  const [stocks, setStocks] = useState([]);\n  const [rateLimitExceeded, setRateLimitExceeded] = useState(false);\n\n  const addStock = async () => {\n    try {\n      const response = await axios.get(\n        `https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${symbol}&apikey=${apiKey}`\n      );\n\n      // Check for rate limit message\n      if (\n        response.data.Information &&\n        response.data.Information.includes(\"Thank you for using Alpha Vantage! Our standard API rate limit is 25 requests per day.\")\n      ) {\n        setRateLimitExceeded(true);\n        return;\n      }\n\n      if (\n        !response.data[\"Global Quote\"] ||\n        !response.data[\"Global Quote\"][\"05. price\"]\n      ) {\n        alert(\"Invalid stock symbol. Please try again.\");\n      } else {\n        const newStock = {\n          symbol: symbol.toUpperCase(),\n          price: response.data[\"Global Quote\"][\"05. price\"],\n        };\n        setStocks([...stocks, newStock]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching stock data:\", error);\n      alert(\"Error fetching stock data. Please try again.\");\n    }\n\n    // Clear the input field\n    setSymbol(\"\");\n  };\n\n  return (\n    <div className=\"findStockContainer\">\n      <div className=\"findStockInput\">\n        <span>\n          <label htmlFor=\"symbol\">Stock Symbol:</label>\n          <input\n            type=\"text\"\n            id=\"symbol\"\n            value={symbol}\n            onChange={(e) => setSymbol(e.target.value)}\n            placeholder=\"Enter stock symbol\"\n          />\n          <button onClick={addStock}>Add Stock</button>\n        </span>\n      </div>\n      <div className=\"findStocksList\">\n        {rateLimitExceeded ? (\n          <p>Maximum API calls for the day reached. Please try again tomorrow.</p>\n        ) : (\n          <ul>\n            {stocks.map((stock, index) => (\n              <div className=\"stocksCard\" key={index}>\n                <div className=\"stockCardTitle\"> {stock.symbol} </div>\n                <div className=\"stockCardPrice\"> {stock.price} </div>\n                <div className=\"stockCardRising\"> {stock.symbol} </div>\n              </div>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FindStock;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}